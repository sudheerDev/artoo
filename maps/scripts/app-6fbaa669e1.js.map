{"version":3,"sources":["scripts/app.js"],"names":["angular","module","AddUserModalController","$uibModalInstance","BugListService","RootService","user","userIndex","vm","this","usernameError","username","password","role","roles","lookupCode","description","addNewUser","userDetails","setUser","setNewUser","close","checkUserName","name","index","cancel","dismiss","$inject","controller","navBar","$localForage","$window","NavbarController","logout","removeItem","location","reload","directive","restrict","templateUrl","scope","adminRole","controllerAs","bindToController","AddBugModalController","bug","bugIndex","bugName","bugDesc","priority","status","assignedTo","priorities","statuses","allUsers","getAllUsers","allProductEngineers","filter","addNewBug","bugDetails","saveBug","ManageUsersController","$uibModal","appConst","userList","userModalOpen","open","animation","animationsEnabled","ariaLabelledBy","ariaDescribedBy","resolve","removeUser","presentUser","getItem","then","users","getPresentUser","setPresentUser","push","setItem","splice","CheckLogin","find","findIndex","factory","MainController","$timeout","currentUser","adminId","bugList","getProductEngBugs","getBugList","bugModalOpen","bugObj","priorityClass","statusClass","sortBy","type","reverse","bugsList","bugs","Array","prototype","apply","unshift","LoginService","userInfo","getUserInfo","setUserInfo","LoginController","$state","submitLoginForm","passwordError","userMatch","go","getLocalUsers","runBlock","$log","$rootScope","data","mockData","id","$on","event","toState","toParams","fromState","fromParams","error","run","routerConfig","$stateProvider","$urlRouterProvider","state","url","abstract","loginCheck","$q","deferred","defer","result","reject","promise","adminCheck","otherwise","config","constant","1","2","3","$logProvider","toastrConfig","$localForageProvider","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-6fbaa669e1.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('artoo', ['ngSanitize', 'ngAria', 'ui.router', 'toastr', 'ui.bootstrap', 'LocalForageModule']);\n\n})();\n\n\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .controller('AddUserModalController', AddUserModalController);\r\n\r\n  /** @ngInject */\r\n  function AddUserModalController($uibModalInstance, BugListService, RootService, user, userIndex) {\r\n    var vm = this;\r\n\r\n    vm.usernameError = false;\r\n    if (user) {\r\n      vm.username = user.username;\r\n      vm.password = user.password;\r\n      vm.role = user.role;\r\n    }\r\n\r\n    vm.roles = [\r\n      {'lookupCode': 1, 'description': 'Admin'},\r\n      {'lookupCode': 2, 'description': 'Prduct engineer'},\r\n      {'lookupCode': 3, 'description': 'Support engineer'}\r\n    ];\r\n\r\n    vm.addNewUser = function () {\r\n      var userDetails = {\r\n        username: vm.username,\r\n        password: vm.password,\r\n        role: vm.role\r\n      };\r\n\r\n      if (user) {\r\n        RootService.setUser(userDetails, userIndex);\r\n      } else {\r\n        RootService.setNewUser(userDetails);\r\n      }\r\n\r\n      $uibModalInstance.close();\r\n    };\r\n\r\n    vm.checkUserName = function(name) {\r\n      var index = RootService.checkUserName(name);\r\n      if (index > 0 && index != userIndex) {\r\n        vm.usernameError = true;\r\n      } else {\r\n        vm.usernameError = false;\r\n      }\r\n    };\r\n\r\n    vm.cancel = function () {\r\n      $uibModalInstance.dismiss('cancel');\r\n    };\r\n\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .directive('navBar', navBar);\n\n  /** @ngInject */\n  function navBar($localForage, $window) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n        adminRole: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      var vm = this;\n\n      vm.logout = function () {\n        $localForage.removeItem('LoggedUser');\n        $window.location.reload();\n      }\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      // vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n\r\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .controller('AddBugModalController', AddBugModalController);\r\n\r\n  /** @ngInject */\r\n  function AddBugModalController($uibModalInstance, BugListService, bug, bugIndex, RootService) {\r\n    var vm = this;\r\n\r\n    // if edit of bug param - bug is sent to modal through resolve so add default values\r\n    if (bug) {\r\n      vm.bugName = bug.name;\r\n      vm.bugDesc = bug.description;\r\n      vm.priority = bug.priority;\r\n      vm.status = bug.status;\r\n      vm.assignedTo = bug.assignedTo;\r\n    } else {\r\n      vm.priority = 2;\r\n      vm.status = 1;\r\n    }\r\n\r\n    vm.priorities = [\r\n      {'lookupCode': 1, 'description': 'High'},\r\n      {'lookupCode': 2, 'description': 'Medium'},\r\n      {'lookupCode': 3, 'description': 'Low'}\r\n    ];\r\n\r\n    vm.statuses = [\r\n      {'lookupCode': 1, 'description': 'Pending'},\r\n      {'lookupCode': 2, 'description': 'Completed'}\r\n    ];\r\n\r\n    vm.allUsers = RootService.getAllUsers();\r\n\r\n    // for assigning users - filter for only product engineers\r\n    vm.allProductEngineers = vm.allUsers.filter(function (user) {\r\n      return user.role === 2;\r\n    });\r\n\r\n    vm.addNewBug = function () {\r\n      var bugDetails = {\r\n        name: vm.bugName,\r\n        description: vm.bugDesc,\r\n        priority: vm.priority,\r\n        status: vm.status,\r\n        assignedTo: vm.assignedTo\r\n      };\r\n\r\n      // if bug exists its edit so, override with index.\r\n      if (bug) {\r\n        BugListService.saveBug(bugDetails, bugIndex);\r\n      } else {\r\n        BugListService.addNewBug(bugDetails);\r\n      }\r\n\r\n      $uibModalInstance.close();\r\n    };\r\n\r\n    vm.cancel = function () {\r\n      $uibModalInstance.dismiss('cancel');\r\n    };\r\n\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .controller('ManageUsersController', ManageUsersController);\r\n\r\n  /** @ngInject */\r\n  function ManageUsersController($uibModal, appConst, RootService) {\r\n    var vm = this;\r\n\r\n    vm.userList = RootService.getAllUsers();\r\n    vm.roles = appConst.roles;\r\n\r\n    vm.userModalOpen = function (user, userIndex) {\r\n      $uibModal.open({\r\n        animation: vm.animationsEnabled,\r\n        ariaLabelledBy: 'modal-title',\r\n        ariaDescribedBy: 'modal-body',\r\n        templateUrl: 'addNewUserModal.html',\r\n        controller: 'AddUserModalController',\r\n        controllerAs: 'vm',\r\n        resolve: {\r\n          user: user,\r\n          userIndex: userIndex\r\n        }\r\n      });\r\n    };\r\n\r\n    vm.removeUser = function(index) {\r\n      RootService.removeUser(index);\r\n    };\r\n\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .factory('RootService', RootService);\r\n\r\n  /** @ngInject */\r\n  function RootService($localForage) {\r\n    var allUsers = [];\r\n    var presentUser = {};\r\n\r\n    //Load available users on to service on intiation\r\n    $localForage.getItem('users').then(function(users) {\r\n      allUsers = users;\r\n    });\r\n\r\n    this.getAllUsers = function () {\r\n      return allUsers;\r\n    };\r\n\r\n    this.getPresentUser = function () {\r\n      return presentUser;\r\n    };\r\n\r\n    this.setPresentUser = function (user) {\r\n      presentUser = user;\r\n    };\r\n\r\n    this.setNewUser = function (user) {\r\n      allUsers.push(user);\r\n      $localForage.setItem('users', allUsers);\r\n    };\r\n\r\n    this.removeUser = function (index) {\r\n      allUsers.splice(index, 1);\r\n      $localForage.setItem('users', allUsers);\r\n    };\r\n\r\n    // for editing user details.\r\n    this.setUser = function (user, index) {\r\n      allUsers[index] = user;\r\n    };\r\n\r\n    this.CheckLogin = function() {\r\n      return $localForage.getItem('LoggedUser').then(function(username) {\r\n        if (username) {\r\n          return allUsers.find(function (user) {\r\n            return user.username === username;\r\n          });\r\n        }\r\n        return false;\r\n      });\r\n    };\r\n\r\n    this.checkUserName = function(username) {\r\n      return allUsers.findIndex(function (user) {\r\n        return user.username === username;\r\n      });\r\n    };\r\n\r\n    return this;\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController(RootService, $uibModal, BugListService, appConst, $timeout) {\n    var vm = this;\n    vm.currentUser = RootService.getPresentUser();\n    vm.animationsEnabled = true;\n    vm.adminId = appConst.roles[1]; // better get key by value with admin\n    vm.priorities = appConst.priorities;\n    vm.statuses = appConst.statuses;\n\n    if (vm.currentUser.role === 2) {\n      $timeout(function () {\n        vm.bugList = BugListService.getProductEngBugs(vm.currentUser.username);\n      }, 100); // localForage async call back is after this function call. just waiting for stack to be cleared.\n    } else {\n      vm.bugList = BugListService.getBugList();\n    }\n\n    vm.bugModalOpen = function (bugObj, bugIndex) {\n      $uibModal.open({\n        animation: vm.animationsEnabled,\n        ariaLabelledBy: 'modal-title',\n        ariaDescribedBy: 'modal-body',\n        templateUrl: 'addNewBugModal.html',\n        controller: 'AddBugModalController',\n        controllerAs: 'vm',\n        resolve: {\n          bug: bugObj,\n          bugIndex: bugIndex\n        }\n      });\n    }\n\n    // class for showing priority label\n    vm.priorityClass = function (priority) {\n      if (priority === 1) {\n        return 'label label-danger';\n      } else if (priority === 2) {\n        return 'label label-warning';\n      } else {\n        return 'label label-info';\n      }\n    };\n\n    // class for showing status label\n    vm.statusClass = function (status) {\n      if (status === 1) {\n        return 'label label-danger';\n      } else {\n        return 'label label-success';\n      }\n    };\n\n    // function for onclick of sort - just reverse if its of same sortType or sort\n    vm.sortBy = function(type) {\n      vm.reverse = vm.filter === type ? !vm.reverse : vm.reverse;\n      vm.filter = type;\n    }\n  }\n})();\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .factory('BugListService', BugListService);\r\n\r\n  /** @ngInject */\r\n  function BugListService($localForage) {\r\n    var bugsList = [];\r\n\r\n    $localForage.getItem('bugs').then(function(bugs) {\r\n      if (bugs) {\r\n        Array.prototype.push.apply(bugsList, bugs);\r\n      }\r\n    });\r\n\r\n    this.getBugList = function () {\r\n      return bugsList;\r\n    };\r\n\r\n    this.getProductEngBugs = function (username) {\r\n      return bugsList.filter(function(bug) {\r\n        return bug.assignedTo == username;\r\n      });\r\n    };\r\n\r\n    this.saveBug = function (bug, bugIndex) {\r\n      bugsList[bugIndex] = bug;\r\n      $localForage.setItem('bugs', bugsList);\r\n    };\r\n\r\n    this.addNewBug = function(bug) {\r\n      bugsList.unshift(bug);\r\n      $localForage.setItem('bugs', bugsList);\r\n    };\r\n\r\n    return this;\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .factory('LoginService', LoginService);\r\n\r\n  /** @ngInject */\r\n  function LoginService() {\r\n\r\n    var userInfo;\r\n\r\n    this.getUserInfo = function() {\r\n      return userInfo;\r\n    };\r\n\r\n    this.setUserInfo = function(userInfo) {\r\n      userInfo = userInfo;\r\n    };\r\n\r\n    return this;\r\n  }\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('artoo')\r\n    .controller('LoginController', LoginController);\r\n\r\n  /** @ngInject */\r\n  function LoginController(LoginService, $localForage, RootService, $state) {\r\n    var vm = this;\r\n\r\n    vm.submitLoginForm = function (username, password) {\r\n      vm.passwordError = false;\r\n      vm.usernameError = false;\r\n\r\n      var userMatch = RootService.getAllUsers().find(function (user) {\r\n        return user.username === username;\r\n      });\r\n      if (userMatch) {\r\n        if (userMatch.password === password) {\r\n          RootService.setPresentUser(userMatch);\r\n          $localForage.setItem('LoggedUser', userMatch.username).then(function() {\r\n            $state.go('root.home');\r\n          });\r\n        } else {\r\n          vm.passwordError = true;\r\n        }\r\n      } else {\r\n        vm.usernameError = true;\r\n      }\r\n      return userMatch;\r\n    }\r\n\r\n    vm.getLocalUsers();\r\n\r\n  }\r\n})();\r\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, $localForage, $rootScope, $state) {\n\n    $localForage.getItem('users').then(function(data) {\n      var mockData = [{\n           \"username\":\"admin\",\n           \"password\":\"admin\",\n           \"id\":1,\n           \"role\":1\n        }\n      ];\n\n      if(!data) {\n        $localForage.setItem('users', mockData);\n      }\n\n    });\n\n    $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams, error) {\n      if (error === 'routeError') {\n        $state.go('root.home');\n      } else if (error === 'loginError') {\n        $state.go('login')\n      }\n    });\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $stateProvider\n      .state('root', {\n        url: '',\n        abstract: true,\n        templateUrl: 'app/root/root.html',\n        resolve: {\n            loginCheck: function(RootService, $q) {\n              var deferred = $q.defer();\n              RootService.CheckLogin().then(function (result) {\n                if (result) {\n                  RootService.setPresentUser(result);\n                  deferred.resolve();\n                }\n                deferred.reject('loginError');\n              });\n              return deferred.promise;\n            }\n          }\n      })\n      .state('root.home', {\n        url: '/',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'vm'\n      })\n      .state('root.manageUsers', {\n        url: '/users',\n        templateUrl: 'app/users/manageUsers.html',\n        controller: 'ManageUsersController',\n        controllerAs: 'vm',\n        resolve: {\n          adminCheck: function(RootService, $q) {\n            var deferred = $q.defer();\n            var user = RootService.getPresentUser();\n              if (user.role !== 1) {\n                deferred.reject('routeError');\n              }\n              deferred.resolve();\n            return deferred.promise;\n          }\n        }\n      })\n      .state('login', {\n        url: '/login',\n        templateUrl: 'app/login/login.html',\n        controller: 'LoginController',\n        controllerAs: 'vm',\n        resolve: {\n            loginCheck: function(RootService, $q) {\n              var deferred = $q.defer();\n              RootService.CheckLogin().then(function (result) {\n                if (result) {\n                  deferred.reject('routeError');\n                }\n                deferred.resolve();\n              });\n              return deferred.promise;\n            }\n          }\n      });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .constant('appConst', {\n      roles: {\n        1: 'Admin',\n        2: 'Product Engineer',\n        3: 'Support engineer'\n      },\n      priorities: {\n        1: 'High',\n        2: 'Medium',\n        3: 'Low'\n      },\n      statuses: {\n        1: 'Pending',\n        2: 'Completed'\n      }\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('artoo')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $localForageProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n\n\n    $localForageProvider.config({\n      name        : 'artoo', // name of the database and prefix for your data, it is \"lf\" by default\n      description : 'some description'\n    });\n  }\n\n})();\n\nangular.module(\"artoo\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/login/login.html\",\"<div class=container><div class=row><div class=\\\"col-md-4 col-md-offset-4 mt40\\\"><form name=loginForm novalidate ng-submit=\\\"vm.submitLoginForm(vm.username, vm.password)\\\"><div class=form-group><label for=username>Username</label><input ng-model=vm.username type=text id=username name=username class=form-control placeholder=\\\"Enter username\\\" autofocus autocomplete=off required><p ng-if=vm.usernameError class=text-danger>Please check username</p></div><div class=form-group><label for=password>Password</label><input ng-model=vm.password type=password id=password name=password class=form-control placeholder=\\\"Enter password\\\" required><p ng-if=vm.passwordError class=text-danger>Password error!</p></div><div class=form-group><button class=\\\"btn btn-primary\\\" type=submit>Log In</button></div></form></div></div></div>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=container><div><nav-bar admin-role=\\\"vm.currentUser.role === 1\\\"></nav-bar></div><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.bugModalOpen()><i class=\\\"glyphicon glyphicon-plus mr10\\\"></i>Bug</button><table class=\\\"table table-striped\\\"><thead><tr><th ng-click=\\\"vm.sortBy(\\'name\\')\\\">Bug name <i class=\\\"glyphicon glyphicon-sort\\\"></i></th><th ng-click=\\\"vm.sortBy(\\'description\\')\\\">description <i class=\\\"glyphicon glyphicon-sort\\\"></i></th><th ng-click=\\\"vm.sortBy(\\'priority\\')\\\">Priority <i class=\\\"glyphicon glyphicon-sort\\\"></i></th><th ng-click=\\\"vm.sortBy(\\'status\\')\\\">Status <i class=\\\"glyphicon glyphicon-sort\\\"></i></th></tr></thead><tbody><tr ng-repeat=\\\"bug in vm.bugList | orderBy:vm.filter:vm.reverse track by $index\\\" ng-click=\\\"vm.bugModalOpen(bug, $index)\\\"><td>{{bug.name}}</td><td>{{bug.description}}</td><td><span ng-class=vm.priorityClass(bug.priority)>{{vm.priorities[bug.priority]}}</span></td><td><span ng-class=vm.statusClass(bug.status)>{{vm.statuses[bug.status]}}</span></td><td><i class=\\\"glyphicon glyphicon-edit\\\"></i></td></tr></tbody></table></div><script type=text/ng-template id=addNewBugModal.html><div class=\\\"modal-header\\\">\\n    <h3 class=\\\"modal-title\\\" id=\\\"modal-title\\\">Bug</h3>\\n  </div>\\n  <div class=\\\"modal-body\\\" id=\\\"modal-body\\\">\\n    <form role=\\\"create new bug\\\" name=\\\"createNewBug\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"bugName\\\">Bug name</label>\\n        <input type=\\\"text\\\" ng-model=\\\"vm.bugName\\\" class=\\\"form-control\\\" id=\\\"bugName\\\" placeholder=\\\"name\\\" required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"bugDescription\\\">Bug description</label>\\n        <textarea type=\\\"password\\\" ng-model=\\\"vm.bugDesc\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"description\\\" required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"priority\\\">Priority</label>\\n        <select id=\\\"priority\\\" ng-model=\\\"vm.priority\\\"\\n          ng-options=\\\"vm.lookupCode as vm.description for vm in vm.priorities\\\" required></select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"status\\\">Status</label>\\n        <select id=\\\"status\\\" ng-model=\\\"vm.status\\\"\\n          ng-options=\\\"vm.lookupCode as vm.description for vm in vm.statuses\\\" required></select>\\n      </div>\\n      <div class=\\\"form-group\\\" ng-if=\\\"vm.allProductEngineers.length\\\">\\n        <label for=\\\"assignedTo\\\">Assign to</label>\\n        <select id=\\\"assignedTo\\\" ng-model=\\\"vm.assignedTo\\\"\\n          ng-options=\\\"vm.username as vm.username for vm in vm.allProductEngineers\\\" required></select>\\n      </div>\\n      <p class=\\\"text-warning\\\" ng-if=\\\"!vm.allProductEngineers.length\\\">Please add product engineers to assign bugs</p>\\n\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-disabled=\\\"createNewBug.$invalid\\\" ng-click=\\\"vm.addNewBug()\\\">OK</button>\\n    <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\n  </div></script>\");\n$templateCache.put(\"app/root/root.html\",\"<div class=container><div ui-view></div></div>\");\n$templateCache.put(\"app/users/manageUsers.html\",\"<div class=container><div><nav-bar admin-role=true></nav-bar></div><button type=button class=\\\"btn btn-primary\\\" ng-click=vm.userModalOpen()><i class=\\\"glyphicon glyphicon-plus mr10\\\"></i>User</button><div class=table-responsive><table class=table><thead><tr><th>username</th><th>role</th></tr></thead><tbody><tr ng-repeat=\\\"user in vm.userList track by $index\\\"><td>{{user.username}}</td><td>{{vm.roles[user.role]}}</td><td><button type=button name=button class=\\\"btn btn-sm btn-info\\\"><i class=\\\"glyphicon glyphicon-edit\\\" ng-click=\\\"vm.userModalOpen(user, $index)\\\"></i></button> <button type=button name=button class=\\\"btn btn-sm btn-danger\\\"><i class=\\\"glyphicon glyphicon-remove-circle\\\" ng-click=vm.removeUser($index)></i></button></td></tr></tbody></table></div><script type=text/ng-template id=addNewUserModal.html><div class=\\\"modal-header\\\">\\r\\n      <h3 class=\\\"modal-title\\\" id=\\\"modal-title\\\">User</h3>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" id=\\\"modal-body\\\">\\r\\n      <form role=\\\"create new user\\\" name=\\\"createNewUser\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"username\\\">username</label>\\r\\n          <input type=\\\"text\\\" ng-model=\\\"vm.username\\\" ng-change=\\\"vm.checkUserName(vm.username)\\\"\\r\\n            class=\\\"form-control\\\" id=\\\"username\\\" placeholder=\\\"username\\\"\\r\\n            ng-model-options=\\\"{updateOn: \\'default blur\\', debounce: {default: 500, blur: 0} }\\\" required/>\\r\\n          <p class=\\\"label label-danger\\\" ng-if=\\\"vm.usernameError\\\">Username is already taken please select a different name</p>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" ng-model=\\\"vm.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"password\\\" min-length=\\\"6\\\" required/>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"status\\\">Role</label>\\r\\n          <select ng-model=\\\"vm.role\\\"\\r\\n            ng-options=\\\"vm.lookupCode as vm.description for vm in vm.roles\\\" required></select>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ng-disabled=\\\"createNewUser.$invalid || vm.usernameError\\\" ng-click=\\\"vm.addNewUser()\\\">Save</button>\\r\\n      <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" ng-click=\\\"vm.cancel()\\\">Cancel</button>\\r\\n    </div></script></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=navbar><a href=#/ >Ticket sys</a><ul><li class=active ng-if=vm.adminRole><a ng-href=#/users>Manage Users</a></li></ul><ul class=pull-right><li class=\\\"active pull-right\\\"><a ng-click=vm.logout()>Logout</a></li></ul></nav>\");}]);"],"sourceRoot":"/source/"}