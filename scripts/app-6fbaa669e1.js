!function(){"use strict";angular.module("artoo",["ngSanitize","ngAria","ui.router","toastr","ui.bootstrap","LocalForageModule"])}(),function(){"use strict";function e(e,r,t,o,n){var s=this;s.usernameError=!1,o&&(s.username=o.username,s.password=o.password,s.role=o.role),s.roles=[{lookupCode:1,description:"Admin"},{lookupCode:2,description:"Prduct engineer"},{lookupCode:3,description:"Support engineer"}],s.addNewUser=function(){var r={username:s.username,password:s.password,role:s.role};o?t.setUser(r,n):t.setNewUser(r),e.close()},s.checkUserName=function(e){var r=t.checkUserName(e);r>0&&r!=n?s.usernameError=!0:s.usernameError=!1},s.cancel=function(){e.dismiss("cancel")}}e.$inject=["$uibModalInstance","BugListService","RootService","user","userIndex"],angular.module("artoo").controller("AddUserModalController",e)}(),function(){"use strict";function e(e,r){function t(){var t=this;t.logout=function(){e.removeItem("LoggedUser"),r.location.reload()}}var o={restrict:"E",templateUrl:"app/components/navbar/navbar.html",scope:{adminRole:"="},controller:t,controllerAs:"vm",bindToController:!0};return o}e.$inject=["$localForage","$window"],angular.module("artoo").directive("navBar",e)}(),function(){"use strict";function e(e,r,t,o,n){var s=this;t?(s.bugName=t.name,s.bugDesc=t.description,s.priority=t.priority,s.status=t.status,s.assignedTo=t.assignedTo):(s.priority=2,s.status=1),s.priorities=[{lookupCode:1,description:"High"},{lookupCode:2,description:"Medium"},{lookupCode:3,description:"Low"}],s.statuses=[{lookupCode:1,description:"Pending"},{lookupCode:2,description:"Completed"}],s.allUsers=n.getAllUsers(),s.allProductEngineers=s.allUsers.filter(function(e){return 2===e.role}),s.addNewBug=function(){var n={name:s.bugName,description:s.bugDesc,priority:s.priority,status:s.status,assignedTo:s.assignedTo};t?r.saveBug(n,o):r.addNewBug(n),e.close()},s.cancel=function(){e.dismiss("cancel")}}e.$inject=["$uibModalInstance","BugListService","bug","bugIndex","RootService"],angular.module("artoo").controller("AddBugModalController",e)}(),function(){"use strict";function e(e,r,t){var o=this;o.userList=t.getAllUsers(),o.roles=r.roles,o.userModalOpen=function(r,t){e.open({animation:o.animationsEnabled,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"addNewUserModal.html",controller:"AddUserModalController",controllerAs:"vm",resolve:{user:r,userIndex:t}})},o.removeUser=function(e){t.removeUser(e)}}e.$inject=["$uibModal","appConst","RootService"],angular.module("artoo").controller("ManageUsersController",e)}(),function(){"use strict";function e(e){var r=[],t={};return e.getItem("users").then(function(e){r=e}),this.getAllUsers=function(){return r},this.getPresentUser=function(){return t},this.setPresentUser=function(e){t=e},this.setNewUser=function(t){r.push(t),e.setItem("users",r)},this.removeUser=function(t){r.splice(t,1),e.setItem("users",r)},this.setUser=function(e,t){r[t]=e},this.CheckLogin=function(){return e.getItem("LoggedUser").then(function(e){return e?r.find(function(r){return r.username===e}):!1})},this.checkUserName=function(e){return r.findIndex(function(r){return r.username===e})},this}e.$inject=["$localForage"],angular.module("artoo").factory("RootService",e)}(),function(){"use strict";function e(e,r,t,o,n){var s=this;s.currentUser=e.getPresentUser(),s.animationsEnabled=!0,s.adminId=o.roles[1],s.priorities=o.priorities,s.statuses=o.statuses,2===s.currentUser.role?n(function(){s.bugList=t.getProductEngBugs(s.currentUser.username)},100):s.bugList=t.getBugList(),s.bugModalOpen=function(e,t){r.open({animation:s.animationsEnabled,ariaLabelledBy:"modal-title",ariaDescribedBy:"modal-body",templateUrl:"addNewBugModal.html",controller:"AddBugModalController",controllerAs:"vm",resolve:{bug:e,bugIndex:t}})},s.priorityClass=function(e){return 1===e?"label label-danger":2===e?"label label-warning":"label label-info"},s.statusClass=function(e){return 1===e?"label label-danger":"label label-success"},s.sortBy=function(e){s.reverse=s.filter===e?!s.reverse:s.reverse,s.filter=e}}e.$inject=["RootService","$uibModal","BugListService","appConst","$timeout"],angular.module("artoo").controller("MainController",e)}(),function(){"use strict";function e(e){var r=[];return e.getItem("bugs").then(function(e){e&&Array.prototype.push.apply(r,e)}),this.getBugList=function(){return r},this.getProductEngBugs=function(e){return r.filter(function(r){return r.assignedTo==e})},this.saveBug=function(t,o){r[o]=t,e.setItem("bugs",r)},this.addNewBug=function(t){r.unshift(t),e.setItem("bugs",r)},this}e.$inject=["$localForage"],angular.module("artoo").factory("BugListService",e)}(),function(){"use strict";function e(){var e;return this.getUserInfo=function(){return e},this.setUserInfo=function(e){e=e},this}angular.module("artoo").factory("LoginService",e)}(),function(){"use strict";function e(e,r,t,o){var n=this;n.submitLoginForm=function(e,s){n.passwordError=!1,n.usernameError=!1;var i=t.getAllUsers().find(function(r){return r.username===e});return i?i.password===s?(t.setPresentUser(i),r.setItem("LoggedUser",i.username).then(function(){o.go("root.home")})):n.passwordError=!0:n.usernameError=!0,i},n.getLocalUsers()}e.$inject=["LoginService","$localForage","RootService","$state"],angular.module("artoo").controller("LoginController",e)}(),function(){"use strict";function e(e,r,t,o){r.getItem("users").then(function(e){var t=[{username:"admin",password:"admin",id:1,role:1}];e||r.setItem("users",t)}),t.$on("$stateChangeError",function(e,r,t,n,s,i){"routeError"===i?o.go("root.home"):"loginError"===i&&o.go("login")})}e.$inject=["$log","$localForage","$rootScope","$state"],angular.module("artoo").run(e)}(),function(){"use strict";function e(e,r){e.state("root",{url:"","abstract":!0,templateUrl:"app/root/root.html",resolve:{loginCheck:["RootService","$q",function(e,r){var t=r.defer();return e.CheckLogin().then(function(r){r&&(e.setPresentUser(r),t.resolve()),t.reject("loginError")}),t.promise}]}}).state("root.home",{url:"/",templateUrl:"app/main/main.html",controller:"MainController",controllerAs:"vm"}).state("root.manageUsers",{url:"/users",templateUrl:"app/users/manageUsers.html",controller:"ManageUsersController",controllerAs:"vm",resolve:{adminCheck:["RootService","$q",function(e,r){var t=r.defer(),o=e.getPresentUser();return 1!==o.role&&t.reject("routeError"),t.resolve(),t.promise}]}}).state("login",{url:"/login",templateUrl:"app/login/login.html",controller:"LoginController",controllerAs:"vm",resolve:{loginCheck:["RootService","$q",function(e,r){var t=r.defer();return e.CheckLogin().then(function(e){e&&t.reject("routeError"),t.resolve()}),t.promise}]}}),r.otherwise("/")}e.$inject=["$stateProvider","$urlRouterProvider"],angular.module("artoo").config(e)}(),function(){"use strict";angular.module("artoo").constant("appConst",{roles:{1:"Admin",2:"Product Engineer",3:"Support engineer"},priorities:{1:"High",2:"Medium",3:"Low"},statuses:{1:"Pending",2:"Completed"}})}(),function(){"use strict";function e(e,r,t){e.debugEnabled(!0),r.allowHtml=!0,r.timeOut=3e3,r.positionClass="toast-top-right",r.preventDuplicates=!0,r.progressBar=!0,t.config({name:"artoo",description:"some description"})}e.$inject=["$logProvider","toastrConfig","$localForageProvider"],angular.module("artoo").config(e)}(),angular.module("artoo").run(["$templateCache",function(e){e.put("app/login/login.html",'<div class=container><div class=row><div class="col-md-4 col-md-offset-4 mt40"><form name=loginForm novalidate ng-submit="vm.submitLoginForm(vm.username, vm.password)"><div class=form-group><label for=username>Username</label><input ng-model=vm.username type=text id=username name=username class=form-control placeholder="Enter username" autofocus autocomplete=off required><p ng-if=vm.usernameError class=text-danger>Please check username</p></div><div class=form-group><label for=password>Password</label><input ng-model=vm.password type=password id=password name=password class=form-control placeholder="Enter password" required><p ng-if=vm.passwordError class=text-danger>Password error!</p></div><div class=form-group><button class="btn btn-primary" type=submit>Log In</button></div></form></div></div></div>'),e.put("app/main/main.html",'<div class=container><div><nav-bar admin-role="vm.currentUser.role === 1"></nav-bar></div><button type=button class="btn btn-primary" ng-click=vm.bugModalOpen()><i class="glyphicon glyphicon-plus mr10"></i>Bug</button><table class="table table-striped"><thead><tr><th ng-click="vm.sortBy(\'name\')">Bug name <i class="glyphicon glyphicon-sort"></i></th><th ng-click="vm.sortBy(\'description\')">description <i class="glyphicon glyphicon-sort"></i></th><th ng-click="vm.sortBy(\'priority\')">Priority <i class="glyphicon glyphicon-sort"></i></th><th ng-click="vm.sortBy(\'status\')">Status <i class="glyphicon glyphicon-sort"></i></th></tr></thead><tbody><tr ng-repeat="bug in vm.bugList | orderBy:vm.filter:vm.reverse track by $index" ng-click="vm.bugModalOpen(bug, $index)"><td>{{bug.name}}</td><td>{{bug.description}}</td><td><span ng-class=vm.priorityClass(bug.priority)>{{vm.priorities[bug.priority]}}</span></td><td><span ng-class=vm.statusClass(bug.status)>{{vm.statuses[bug.status]}}</span></td><td><i class="glyphicon glyphicon-edit"></i></td></tr></tbody></table></div><script type=text/ng-template id=addNewBugModal.html><div class="modal-header">\n    <h3 class="modal-title" id="modal-title">Bug</h3>\n  </div>\n  <div class="modal-body" id="modal-body">\n    <form role="create new bug" name="createNewBug">\n      <div class="form-group">\n        <label for="bugName">Bug name</label>\n        <input type="text" ng-model="vm.bugName" class="form-control" id="bugName" placeholder="name" required/>\n      </div>\n      <div class="form-group">\n        <label for="bugDescription">Bug description</label>\n        <textarea type="password" ng-model="vm.bugDesc" class="form-control" id="exampleInputPassword1" placeholder="description" required/>\n      </div>\n      <div class="form-group">\n        <label for="priority">Priority</label>\n        <select id="priority" ng-model="vm.priority"\n          ng-options="vm.lookupCode as vm.description for vm in vm.priorities" required></select>\n      </div>\n      <div class="form-group">\n        <label for="status">Status</label>\n        <select id="status" ng-model="vm.status"\n          ng-options="vm.lookupCode as vm.description for vm in vm.statuses" required></select>\n      </div>\n      <div class="form-group" ng-if="vm.allProductEngineers.length">\n        <label for="assignedTo">Assign to</label>\n        <select id="assignedTo" ng-model="vm.assignedTo"\n          ng-options="vm.username as vm.username for vm in vm.allProductEngineers" required></select>\n      </div>\n      <p class="text-warning" ng-if="!vm.allProductEngineers.length">Please add product engineers to assign bugs</p>\n\n    </form>\n  </div>\n  <div class="modal-footer">\n    <button class="btn btn-primary" type="button" ng-disabled="createNewBug.$invalid" ng-click="vm.addNewBug()">OK</button>\n    <button class="btn btn-warning" type="button" ng-click="vm.cancel()">Cancel</button>\n  </div></script>'),e.put("app/root/root.html","<div class=container><div ui-view></div></div>"),e.put("app/users/manageUsers.html",'<div class=container><div><nav-bar admin-role=true></nav-bar></div><button type=button class="btn btn-primary" ng-click=vm.userModalOpen()><i class="glyphicon glyphicon-plus mr10"></i>User</button><div class=table-responsive><table class=table><thead><tr><th>username</th><th>role</th></tr></thead><tbody><tr ng-repeat="user in vm.userList track by $index"><td>{{user.username}}</td><td>{{vm.roles[user.role]}}</td><td><button type=button name=button class="btn btn-sm btn-info"><i class="glyphicon glyphicon-edit" ng-click="vm.userModalOpen(user, $index)"></i></button> <button type=button name=button class="btn btn-sm btn-danger"><i class="glyphicon glyphicon-remove-circle" ng-click=vm.removeUser($index)></i></button></td></tr></tbody></table></div><script type=text/ng-template id=addNewUserModal.html><div class="modal-header">\r\n      <h3 class="modal-title" id="modal-title">User</h3>\r\n    </div>\r\n    <div class="modal-body" id="modal-body">\r\n      <form role="create new user" name="createNewUser">\r\n        <div class="form-group">\r\n          <label for="username">username</label>\r\n          <input type="text" ng-model="vm.username" ng-change="vm.checkUserName(vm.username)"\r\n            class="form-control" id="username" placeholder="username"\r\n            ng-model-options="{updateOn: \'default blur\', debounce: {default: 500, blur: 0} }" required/>\r\n          <p class="label label-danger" ng-if="vm.usernameError">Username is already taken please select a different name</p>\r\n        </div>\r\n        <div class="form-group">\r\n          <label for="password">Password</label>\r\n          <input type="password" ng-model="vm.password" class="form-control" id="password" placeholder="password" min-length="6" required/>\r\n        </div>\r\n        <div class="form-group">\r\n          <label for="status">Role</label>\r\n          <select ng-model="vm.role"\r\n            ng-options="vm.lookupCode as vm.description for vm in vm.roles" required></select>\r\n        </div>\r\n      </form>\r\n\r\n    </div>\r\n    <div class="modal-footer">\r\n      <button class="btn btn-primary" type="button" ng-disabled="createNewUser.$invalid || vm.usernameError" ng-click="vm.addNewUser()">Save</button>\r\n      <button class="btn btn-warning" type="button" ng-click="vm.cancel()">Cancel</button>\r\n    </div></script></div>'),e.put("app/components/navbar/navbar.html",'<nav class=navbar><a href=#/ >Ticket sys</a><ul><li class=active ng-if=vm.adminRole><a ng-href=#/users>Manage Users</a></li></ul><ul class=pull-right><li class="active pull-right"><a ng-click=vm.logout()>Logout</a></li></ul></nav>')}]);
//# sourceMappingURL=../maps/scripts/app-6fbaa669e1.js.map
